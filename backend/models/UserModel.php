<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/7
 * Time: 10:39
 */

namespace backend\models;


use yii\db\ActiveRecord;
use Yii;

class UserModel extends ActiveRecord
{
    const SCENARIO_ADD = 'add';
    const SCENARIO_SAVE = 'save';

    public $laopwd;
    public $rpwd;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%user}}';

    }

    public function rules()
    {
        return [
            // name, email, subject and body are required
            ['username', 'required', 'message' => '用户名不能为空'],
            ['username', 'unique', 'message' => '用户名已经存在'],
            [['password_hash'], 'required', 'message' => '密码不能为空','on'=>'add'],
            [['email'], 'required', 'message' => '邮箱不能为空'],
            [['email'], 'email', 'message' => '邮箱不正确'],
            [['role'], 'required', 'message' => '角色不能为空'],
            [['status'], 'required', 'message' => '状态不能为空'],
            //>>.密码长度验证放这里
            [['password_hash'],'match','pattern'=>'/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,12}$/','message'=>'密码必须有字母和数字6到12位','on'=>['add','save']],
            [['password_hash'],'match','pattern'=>'/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,12}$/','message'=>'新密码必须有字母和数字6到12位','on'=>['reset']],
//            [['password_hash'],'pwd','message'=>'密码必须有字母和数字6到12位','on'=>['add','save']],
            [['status'], 'SetPaddword', ],
            [['status'], 'SetPaddwords', ],
            [['password_hash'], 'reset_password', 'on'=>'reset'],
            [['password_hash'], 'SetPaddword', 'on'=>'reset'],


        ];
    }

    public function scenarios()
    {
        $scenarios = parent::scenarios();
        $scenarios[self::SCENARIO_ADD] = ['username', 'password_hash','email','role','status'];
        $scenarios[self::SCENARIO_SAVE] = ['username', 'password_hash','email','role','status'];
        $scenarios['reset'] = ['laopwd','password_hash','rpwd'];
        return $scenarios;
    }

    /**
     * 修改密码
     * @return bool
     */
    public function reset_password(){
        if($this->rpwd!=$this->password_hash){
            $this->addError('info','二次密码不一样');
            return false;
        }
        //验证密码旧密码
        $userinfo=\Yii::$app->user->getIdentity();

        $model =UserModel::findOne($userinfo->getId());
        if(!Yii::$app->getSecurity()->validatePassword($this->laopwd, $model->password_hash)){
            $this->addError('info','旧密码错误');
            return false;
        }

    }

    public function SetPaddwords()
    {
        if(!empty($this->id)){
            $userinfo=\Yii::$app->user->getIdentity();
            if($this->id==1&&$userinfo->getId()!=1){
                $this->addError('info','不能修改超级管理员信息');
                return false;
            }
        }
    }
    /**
     * 设置密码
     * @param $password
     */
    public function SetPaddword(){
        if(!empty($this->id)){
            //判断密码
            if(!empty($this->password_hash)){
                $this->password_hash=\Yii::$app->security->generatePasswordHash(($this->password_hash));
            }else{
                unset($this->password_hash);
            }

            if($this->id==1&&$this->status!=10){
                $this->addError('info','超级管理不能禁用');
                return false;
            }
        }else{
            $this->created_at=time();
            $this->password_hash=\Yii::$app->security->generatePasswordHash(($this->password_hash));

        }
        $this->updated_at=time();

    }
    //删除前调用
    public function beforeDelete()
    {
        parent::beforeDelete(); // TODO: Change the autogenerated stub
        if(!empty($this->id)&&$this->id==1){
            $this->addError('info','不能删除超级管理');
            return false;
        }else{
            return true;
        }
    }
}