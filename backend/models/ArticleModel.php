<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/10
 * Time: 21:30
 */

namespace backend\models;


use backend\component\Message;
use yii\db\ActiveRecord;

class ArticleModel extends  ActiveRecord
{
    const SCENARIO_ADD = 'add';//添加场景
    const SCENARIO_SAVE = 'save';//修改场景
    const SCENARIO_SUBJECT = 'subject';//专题场景
    const SCENARIO_STICK_STATUS = 'stick_status';//置顶场景
    const SCENARIO_DELETE = 'delete';//置顶场景
    //专题
    public $article_id;
    public $subject_id;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%article}}';

    }
    public function rules()
    {
        return [
            // name, email, subject and body are required
            ['title', 'required', 'message' => '标题不能为空','on'=>['add','save']],
            ['title', 'unique', 'message' => '标题已经存在','on'=>['add','save']],
            ['content', 'required', 'message' => '内容不能为空','on'=>['add','save']],
            ['keyword', 'required', 'message' => '关键字不能为空','on'=>['add','save']],
            ['content_introduce', 'required', 'message' => '内容介绍不能为空','on'=>['add','save']],
            ['title_img', 'required', 'message' => '标题图片不能为空','on'=>['add','save']],
            ['status', 'required', 'message' => '状态不能为空','on'=>['add','save']],
            ['type_id', 'required', 'message' => '文章类型不能为空','on'=>['add','save']],

            //验证专题
            ['article_id', 'required', 'message' => '文章不能为空','on'=>'subject'],
            ['subject_id', 'required', 'message' => '专题不能为空','on'=>'subject'],
            //置顶,取消置顶,头条场景
            ['id', 'required', 'message' => '文章必须选择一个','on'=>'stick_status'],
        ];
    }
    public function scenarios()
    {
        $scenarios = parent::scenarios();
        $scenarios[self::SCENARIO_ADD] = ['title', 'content','author','keyword','content_introduce','status','title_img','type_id'];
        $scenarios[self::SCENARIO_SAVE] = ['title', 'content','author','keyword','content_introduce','status','title_img','type_id'];
        $scenarios[self::SCENARIO_DELETE] = ['status', 'id'];
        //专题
        $scenarios[self::SCENARIO_SUBJECT] = ['subject_id', 'article_id'];
        //置顶,取消置顶,头条场景
        $scenarios[self::SCENARIO_STICK_STATUS] = ['id'];
        return $scenarios;
    }






    //验证成功的时候处理数据
    public function afterValidate()
    {
        parent::afterValidate(); // TODO: Change the autogenerated stub
        if(empty($this->id)){
            $user = \Yii::$app->user->identity;
            $this->created_at=time();
            //只有发布的时候才有下面的内容
            //是否是后台发送
            $this->admin_type=1;
            //发布用户的UID
            $this->user_uid=$user->getId();
            //作者
            $this->author=$user->username;
        }else{
            $this->updated_at=time();

        }

        //转移HTML
        $this->content=htmlspecialchars($this->content);
    }


    //推送至头条,取消值头条
    /**
     * @param $field 根据传入字段
     * @param int $type 传入修改值
     * @return bool
     */
    public function save_field_status($field,$type=1){
        $id=explode(',',$this->id);
        $data=[];
        foreach($id as $v){
            if(!empty($v)){
                $data[]=['id'=>$v];
            }
        }
        if(!empty($data))
            static::updateAll([$field=>$type],['in','id',$data]);
        return true;
    }


}